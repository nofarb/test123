name: Full Storage Example – Cache, Artifact, and Package

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write   # Needed for creating GitHub Releases
      packages: write   # If you publish to container/npm/maven later

    steps:
      - name: Checkout (empty repo is fine)
        uses: actions/checkout@v4

      - name: Set up folders
        run: |
          mkdir -p ~/.cache/build-cache/
          mkdir -p ./artifacts/output/
          mkdir -p ./src/

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/build-cache
          key: build-cache-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            build-cache-${{ runner.os }}-

      - name: Simulate source files
        run: |
          echo 'print("Hello from main.py")' > ./src/main.py
          echo 'class Dummy: pass' > ./src/helper.py

      - name: Simulate build – large files (5–10MB)
        run: |
          echo "Creating cacheable files..."
          base64 /dev/urandom | head -c 7000000 > ~/.cache/build-cache/main.pyc
          base64 /dev/urandom | head -c 8000000 > ~/.cache/build-cache/build.meta

          echo "Creating artifact files..."
          base64 /dev/urandom | head -c 5000000 > ./artifacts/output/release.txt
          base64 /dev/urandom | head -c 9000000 > ./artifacts/output/app.zip

      - name: Save cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/build-cache
          key: build-cache-${{ runner.os }}-${{ github.sha }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: simulated-artifacts
          path: ./artifacts/output/

      - name: Publish app.zip as GitHub Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: simulated-release-${{ github.run_number }}
          name: Simulated Build Release ${{ github.run_number }}
          files: ./artifacts/output/app.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
